{"ast":null,"code":"var _jsxFileName = \"/Users/thwilliams/Documents/Code/hangman/src/components/hangman.js\";\nimport React, { Component } from 'react';\nimport './hangman.css';\nimport Row from './row';\nimport './name';\nimport h0 from './images/h0.png';\nimport h1 from './images/h1.jpg';\nimport h2 from './images/h2.jpg';\nimport h3 from './images/h3.jpg';\nimport h4 from './images/h4.jpg';\nimport h5 from './images/h5.jpg';\nimport h6 from './images/h6.jpg';\nimport { randomName } from './name';\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomName()\n    };\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter) ? letter : \" _ \");\n  }\n\n  render() {\n    const gameOver = this.state.mistake >= this.props.triesLeft;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Marvel Character Hangman\"), React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Tries: \", this.state.mistake), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, gameOver ? this.state.answer : this.guessedWord())), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.images[this.state.mistake],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Row, {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Row, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nHangman.defaultProps = {\n  triesLeft: 6,\n  images: [h0, h1, h2, h3, h4, h5, h6]\n};\nexport default Hangman;","map":{"version":3,"sources":["/Users/thwilliams/Documents/Code/hangman/src/components/hangman.js"],"names":["React","Component","Row","h0","h1","h2","h3","h4","h5","h6","randomName","Hangman","constructor","props","state","mistake","guessed","Set","answer","guessedWord","split","map","letter","has","render","gameOver","triesLeft","images","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,QAAP;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,SAASC,UAAT,QAA2B,QAA3B;;AACA,MAAMC,OAAN,SAAsBV,SAAtB,CAA+B;AAK3BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAE,CADF;AAEPC,MAAAA,OAAO,EAAE,IAAIC,GAAJ,CAAQ,EAAR,CAFF;AAGPC,MAAAA,MAAM,EAAER,UAAU;AAHX,KAAX;AAKH;;AACDS,EAAAA,WAAW,GAAE;AACT,WAAO,KAAKL,KAAL,CAAWI,MAAX,CAAkBE,KAAlB,CAAwB,EAAxB,EAA4BC,GAA5B,CAAgCC,MAAM,IAAI,KAAKR,KAAL,CAAWE,OAAX,CAAmBO,GAAnB,CAAuBD,MAAvB,IAAiCA,MAAjC,GAA0C,KAApF,CAAP;AACH;;AACDE,EAAAA,MAAM,GAAE;AACJ,UAAMC,QAAQ,GAAC,KAAKX,KAAL,CAAWC,OAAX,IAAoB,KAAKF,KAAL,CAAWa,SAA9C;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC,KAAKZ,KAAL,CAAWC,OAAhD,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIU,QAAQ,GAAG,KAAKX,KAAL,CAAWI,MAAd,GAAqB,KAAKC,WAAL,EAAjC,CADJ,CAHJ,EAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWc,MAAX,CAAkB,KAAKb,KAAL,CAAWC,OAA7B,CAAV;AAAiD,MAAA,GAAG,EAAC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,EASI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAcH;;AAhC0B;;AAAzBJ,O,CACKiB,Y,GAAa;AAChBF,EAAAA,SAAS,EAAE,CADK;AAEhBC,EAAAA,MAAM,EAAE,CAACxB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB;AAFQ,C;AAiCxB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './hangman.css';\nimport Row from './row';\nimport './name';\nimport h0 from './images/h0.png';\nimport h1 from './images/h1.jpg';\nimport h2 from './images/h2.jpg';\nimport h3 from './images/h3.jpg';\nimport h4 from './images/h4.jpg';\nimport h5 from './images/h5.jpg';\nimport h6 from './images/h6.jpg';\nimport { randomName } from './name';\nclass Hangman extends Component{\n    static defaultProps={\n        triesLeft: 6,\n        images: [h0, h1, h2, h3, h4, h5, h6]\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            mistake: 0,\n            guessed: new Set([]),\n            answer: randomName()\n        }\n    }\n    guessedWord(){\n        return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter) ? letter : \" _ \");\n    }\n    render(){\n        const gameOver=this.state.mistake>=this.props.triesLeft;\n        return (\n            <div>\n                <h1>Marvel Character Hangman</h1>\n                <div className=\"float-right\">Tries: {this.state.mistake}</div>\n                <div className=\"text-center\">\n                    <p>{gameOver ? this.state.answer:this.guessedWord()}</p>\n                    </div>\n                <div className=\"text-center\">\n                    <img src={this.props.images[this.state.mistake]} alt=\"\"/>\n                </div>\n                <Row value={0}></Row>\n                <Row value={1}></Row>\n            </div>\n        );\n    }\n}\nexport default Hangman;"]},"metadata":{},"sourceType":"module"}