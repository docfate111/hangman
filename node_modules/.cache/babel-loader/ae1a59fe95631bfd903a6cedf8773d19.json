{"ast":null,"code":"import _classCallCheck from\"/Users/thwilliams/Documents/Code/hangman/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/thwilliams/Documents/Code/hangman/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/thwilliams/Documents/Code/hangman/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/thwilliams/Documents/Code/hangman/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/thwilliams/Documents/Code/hangman/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./hangman.css';import'./name';import h0 from'./images/h0.png';import h1 from'./images/h1.png';import h2 from'./images/h2.png';import h3 from'./images/h3.png';import h4 from'./images/h4.png';import h5 from'./images/h5.png';import h6 from'./images/h6.png';import{randomName}from'./name';import Button from'react-bootstrap/Button';var Hangman=/*#__PURE__*/function(_Component){_inherits(Hangman,_Component);function Hangman(props){var _this;_classCallCheck(this,Hangman);_this=_possibleConstructorReturn(this,_getPrototypeOf(Hangman).call(this,props));_this.resetButton=function(){_this.setState({mistake:0,guessed:new Set([]),answer:randomName()});};_this.handleGuess=function(e){console.log(_this.state.answer);var letter=e.target.value;_this.setState(function(st){return{guessed:st.guessed.add(letter),mistake:st.mistake+(st.answer.includes(letter)?0:1)};});};_this.state={mistake:0,guessed:new Set([]),answer:randomName()};return _this;}_createClass(Hangman,[{key:\"generateButtons\",value:function generateButtons(){var _this2=this;return\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(function(letter){return React.createElement(Button,{variant:!_this2.state.guessed.has(letter)?\"primary\":\"secondary\",disabled:_this2.state.guessed.has(letter),onClick:_this2.handleGuess,key:letter,value:letter,size:\"lg\"},letter);});}},{key:\"guessedWord\",value:function guessedWord(){var _this3=this;return this.state.answer.split(\"\").map(function(letter){return _this3.state.guessed.has(letter.toLowerCase())?letter:\" _ \";});}},{key:\"render\",value:function render(){var gameOver=this.state.mistake>=this.props.triesLeft;var isWinner=this.guessedWord().join(\"\")===this.state.answer;var gameStat=this.generateButtons();if(isWinner){gameStat=\"You Won!!!\";}if(gameOver){gameStat=\"You Lost!!!\";}return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Marvel Character Hangman\"),React.createElement(\"div\",{id:\"tries\",className:\"float-right\"},\"Incorrect guesses: \",this.state.mistake),React.createElement(\"div\",{className:\"text-center\"},React.createElement(\"p\",{id:\"word\"},gameOver?this.state.answer:this.guessedWord()),React.createElement(\"p\",null,gameStat)),React.createElement(\"div\",{className:\"text-center\"},React.createElement(\"img\",{src:this.props.images[this.state.mistake],alt:\"\"})),React.createElement(\"button\",{className:\"btn btn-info\",onClick:this.resetButton},\"Restart\"));}}]);return Hangman;}(Component);Hangman.defaultProps={triesLeft:6,images:[h0,h1,h2,h3,h4,h5,h6]};export default Hangman;","map":{"version":3,"sources":["/Users/thwilliams/Documents/Code/hangman/src/components/hangman.js"],"names":["React","Component","h0","h1","h2","h3","h4","h5","h6","randomName","Button","Hangman","props","resetButton","setState","mistake","guessed","Set","answer","handleGuess","e","console","log","state","letter","target","value","st","add","includes","split","map","has","toLowerCase","gameOver","triesLeft","isWinner","guessedWord","join","gameStat","generateButtons","images","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './hangman.css';\nimport './name';\nimport h0 from './images/h0.png';\nimport h1 from './images/h1.png';\nimport h2 from './images/h2.png';\nimport h3 from './images/h3.png';\nimport h4 from './images/h4.png';\nimport h5 from './images/h5.png';\nimport h6 from './images/h6.png';\nimport { randomName } from './name';\nimport Button from 'react-bootstrap/Button';\nclass Hangman extends Component{\n    static defaultProps={\n        triesLeft: 6,\n        images: [h0, h1, h2, h3, h4, h5, h6]\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            mistake: 0,\n            guessed: new Set([]),\n            answer: randomName()\n        }\n    }\n    resetButton = () => {\n        this.setState({\n          mistake: 0,\n          guessed: new Set([]),\n          answer: randomName()\n        });\n      }\n    handleGuess= e => {\n        console.log(this.state.answer);\n        let letter=e.target.value;\n        this.setState(st => ({\n            guessed: st.guessed.add(letter),\n            mistake: st.mistake+(st.answer.includes(letter) ? 0 : 1)\n        }));\n    }\n    generateButtons(){\n        return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => (\n            <Button variant={(!(this.state.guessed.has(letter)) ? \"primary\" : \"secondary\")}\n            disabled={this.state.guessed.has(letter)}\n            onClick={this.handleGuess}\n            key={letter}\n            value={letter}\n            size=\"lg\"\n            >{letter}</Button>\n        ));\n    }\n    guessedWord(){\n        return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter.toLowerCase()) ? letter : \" _ \");\n    }\n    render(){\n        const gameOver=this.state.mistake>=this.props.triesLeft;\n        const isWinner = this.guessedWord().join(\"\") === this.state.answer;\n        let gameStat = this.generateButtons();\n        if (isWinner) {\n            gameStat = \"You Won!!!\"\n        }\n        if (gameOver) {\n            gameStat = \"You Lost!!!\"\n        }\n        return (\n            <div>\n                <h1>Marvel Character Hangman</h1>\n                <div id=\"tries\" className=\"float-right\">Incorrect guesses: {this.state.mistake}</div>\n                <div className=\"text-center\">\n                    <p id=\"word\">{gameOver ? this.state.answer:this.guessedWord()}</p>\n                    <p>{gameStat}</p>\n                    </div>\n                <div className=\"text-center\">\n                    <img src={this.props.images[this.state.mistake]} alt=\"\"/>\n                </div>\n                <button className='btn btn-info' onClick={this.resetButton}>Restart</button>\n            </div>\n        );\n    }\n}\nexport default Hangman;"]},"metadata":{},"sourceType":"module"}