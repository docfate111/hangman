{"ast":null,"code":"var _jsxFileName = \"/Users/thwilliams/Documents/Code/hangman/src/components/hangman.js\";\nimport React, { Component } from 'react';\nimport './hangman.css';\nimport './name';\nimport h0 from './images/h0.png';\nimport h1 from './images/h1.png';\nimport h2 from './images/h2.png';\nimport h3 from './images/h3.png';\nimport h4 from './images/h4.png';\nimport h5 from './images/h5.png';\nimport h6 from './images/h6.png';\nimport { randomName } from './name';\nimport Button from 'react-bootstrap/Button';\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGuess = e => {\n      let letter = e.target.value;\n      this.setState(s => ({\n        guessed: s.guessed.add(letter),\n        mistake: s.mistake + (s.answer.includes(letter) ? 0 : 1)\n      }));\n    };\n\n    this.state = {\n      mistake: 0,\n      guessed: new Set([]),\n      answer: randomName()\n    };\n  }\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => React.createElement(Button, {\n      variant: \"primary\",\n      disabled: this.state.guessed.has(letter),\n      onClick: this.handleGuess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, letter));\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter.toUpperCase()) || this.state.guessed.has(letter.toLowerCase()) ? letter : \" _ \");\n  }\n\n  render() {\n    const gameOver = this.state.mistake >= this.props.triesLeft;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Marvel Character Hangman\"), React.createElement(\"div\", {\n      id: \"tries\",\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Tries: \", this.state.mistake), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, gameOver ? this.state.answer : this.guessedWord())), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.images[this.state.mistake],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nHangman.defaultProps = {\n  triesLeft: 6,\n  images: [h0, h1, h2, h3, h4, h5, h6]\n};\nexport default Hangman;","map":{"version":3,"sources":["/Users/thwilliams/Documents/Code/hangman/src/components/hangman.js"],"names":["React","Component","h0","h1","h2","h3","h4","h5","h6","randomName","Button","Hangman","constructor","props","handleGuess","e","letter","target","value","setState","s","guessed","add","mistake","answer","includes","state","Set","generateButtons","split","map","has","guessedWord","toUpperCase","toLowerCase","render","gameOver","triesLeft","images","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './hangman.css';\nimport './name';\nimport h0 from './images/h0.png';\nimport h1 from './images/h1.png';\nimport h2 from './images/h2.png';\nimport h3 from './images/h3.png';\nimport h4 from './images/h4.png';\nimport h5 from './images/h5.png';\nimport h6 from './images/h6.png';\nimport { randomName } from './name';\nimport Button from 'react-bootstrap/Button';\nclass Hangman extends Component{\n    static defaultProps={\n        triesLeft: 6,\n        images: [h0, h1, h2, h3, h4, h5, h6]\n    }\n    constructor(props){\n        super(props);\n        this.state={\n            mistake: 0,\n            guessed: new Set([]),\n            answer: randomName()\n        }\n    }\n    handleGuess=e => {\n        let letter=e.target.value;\n        this.setState(s => ({\n            guessed: s.guessed.add(letter),\n            mistake: s.mistake+(s.answer.includes(letter) ? 0 : 1)\n        }));\n    }\n    generateButtons(){\n        return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => (\n            <Button variant=\"primary\"\n            disabled={this.state.guessed.has(letter)}\n            onClick={this.handleGuess}\n            >{letter}</Button>\n        ));\n    }\n    guessedWord(){\n        return this.state.answer.split(\"\").map(letter => this.state.guessed.has(letter.toUpperCase())||this.state.guessed.has(letter.toLowerCase()) ? letter : \" _ \");\n    }\n    render(){\n        const gameOver=this.state.mistake>=this.props.triesLeft;\n        return (\n            <div>\n                <h1>Marvel Character Hangman</h1>\n                <div id=\"tries\" className=\"float-right\">Tries: {this.state.mistake}</div>\n                <div className=\"text-center\">\n                    <p id=\"word\">{gameOver ? this.state.answer:this.guessedWord()}</p>\n                    </div>\n                <div className=\"text-center\">\n                    <img src={this.props.images[this.state.mistake]} alt=\"\"/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Hangman;"]},"metadata":{},"sourceType":"module"}